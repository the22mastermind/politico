{"version":3,"sources":["../../src/controllers/users.js"],"names":["exports","userSignup","req","res","user","userModel","find","u","email","body","status","json","error","newUser","id","length","firstname","lastname","othername","password","phonenumber","passporturl","isadmin","registeredon","format","push","data","message"],"mappings":";;AAAA;;;;AAEA;;;;;;AAEA;AACAA,QAAQC,UAAR,GAAqB,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAMC,OAAO,MAAMC,gBAAUC,IAAV,CAAe;AAAA,SAAKC,EAAEC,KAAF,KAAYN,IAAIO,IAAJ,CAASD,KAA1B;AAAA,EAAf,CAAnB;AACA,KAAIJ,IAAJ,EAAU;AACT,SAAOD,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BD,WAAQ,GADmB;AAE3BE,yBAAoBV,IAAIO,IAAJ,CAASD,KAA7B;AAF2B,GAArB,CAAP;AAIA;AACD;AACA,KAAMK,UAAU;AACfC,MAAIT,gBAAUU,MAAV,GAAmB,CADR;AAEfC,aAAWd,IAAIO,IAAJ,CAASO,SAFL;AAGfC,YAAUf,IAAIO,IAAJ,CAASQ,QAHJ;AAIfC,aAAWhB,IAAIO,IAAJ,CAASS,SAJL;AAKfV,SAAON,IAAIO,IAAJ,CAASD,KALD;AAMfW,YAAUjB,IAAIO,IAAJ,CAASU,QANJ;AAOfC,eAAalB,IAAIO,IAAJ,CAASW,WAPP;AAQfC,eAAanB,IAAIO,IAAJ,CAASY,WARP;AASfC,WAAS,KATM;AAUfC,gBAAc,wBAASC,MAAT,CAAgB,MAAhB;AAVC,EAAhB;AAYAnB,iBAAUoB,IAAV,CAAeZ,OAAf;AACA,QAAOV,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC3BD,UAAQ,GADmB;AAE3BgB,QAAM,CACJ;AACCV,cAAWH,QAAQG,SADpB;AAECC,aAAUJ,QAAQI,QAFnB;AAGCC,cAAWL,QAAQK,SAHpB;AAICV,UAAOK,QAAQL,KAJhB;AAKCY,gBAAaP,QAAQO,WALtB;AAMCE,YAAST,QAAQS,OANlB;AAOCC,iBAAcV,QAAQU;AAPvB,GADI,CAFqB;AAa3BI,WAAS;AAbkB,EAArB,CAAP;AAeA,CAhDD;AAJA","file":"users.js","sourcesContent":["import userModel from '../models/users';\n// import validator from '../middlewares/validation';\nimport moment from 'moment';\n\n// User signup\nexports.userSignup = async function (req, res) {\n\t// // Joi Validation\n\t// const { error } = validator.validateSignUp(req.body);\n\t// if (error) {\n\t// \treturn res.status(400).json({\n\t// \t\tstatus: 400,\n\t// \t\terror: error.details[0].message\n\t// \t});\n\t// }\n\t// Custom Validation\n\n\t// Check if email is already registered\n\tconst user = await userModel.find(u => u.email === req.body.email);\n\tif (user) {\n\t\treturn res.status(400).json({\n\t\t\tstatus: 400,\n\t\t\terror: `The email ${req.body.email} is already registered.`\n\t\t});\n\t}\n\t// Register user\n\tconst newUser = {\n\t\tid: userModel.length + 1,\n\t\tfirstname: req.body.firstname,\n\t\tlastname: req.body.lastname,\n\t\tothername: req.body.othername,\n\t\temail: req.body.email,\n\t\tpassword: req.body.password,\n\t\tphonenumber: req.body.phonenumber,\n\t\tpassporturl: req.body.passporturl,\n\t\tisadmin: false,\n\t\tregisteredon: moment().format('LLLL')\n\t};\n\tuserModel.push(newUser);\n\treturn res.status(201).json({\n\t\tstatus: 201,\n\t\tdata: [\n\t\t  {\n\t\t  \tfirstname: newUser.firstname,\n\t\t  \tlastname: newUser.lastname,\n\t\t  \tothername: newUser.othername,\n\t\t  \temail: newUser.email,\n\t\t  \tphonenumber: newUser.phonenumber,\n\t\t  \tisadmin: newUser.isadmin,\n\t\t  \tregisteredon: newUser.registeredon\n\t\t  }\n\t\t],\n\t\tmessage: 'Success!'\n\t});\n};\n"]}